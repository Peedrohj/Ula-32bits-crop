|Ula
input1[0] => input1[0].IN1
input1[1] => input1[1].IN1
input1[2] => input1[2].IN1
input1[3] => input1[3].IN1
input1[4] => input1[4].IN1
input1[5] => input1[5].IN1
input1[6] => input1[6].IN1
input1[7] => input1[7].IN1
input1[8] => input1[8].IN1
input1[9] => input1[9].IN1
input1[10] => input1[10].IN1
input1[11] => input1[11].IN1
input1[12] => input1[12].IN1
input1[13] => input1[13].IN1
input1[14] => input1[14].IN1
input1[15] => input1[15].IN1
input1[16] => input1[16].IN1
input1[17] => input1[17].IN1
input1[18] => input1[18].IN1
input1[19] => input1[19].IN1
input1[20] => input1[20].IN1
input1[21] => input1[21].IN1
input1[22] => input1[22].IN1
input1[23] => input1[23].IN1
input1[24] => input1[24].IN1
input1[25] => input1[25].IN1
input1[26] => input1[26].IN1
input1[27] => input1[27].IN1
input1[28] => input1[28].IN1
input1[29] => input1[29].IN1
input1[30] => input1[30].IN1
input1[31] => input1[31].IN1
input2[0] => input2[0].IN1
input2[1] => input2[1].IN1
input2[2] => input2[2].IN1
input2[3] => input2[3].IN1
input2[4] => input2[4].IN1
input2[5] => input2[5].IN1
input2[6] => input2[6].IN1
input2[7] => input2[7].IN1
input2[8] => input2[8].IN1
input2[9] => input2[9].IN1
input2[10] => input2[10].IN1
input2[11] => input2[11].IN1
input2[12] => input2[12].IN1
input2[13] => input2[13].IN1
input2[14] => input2[14].IN1
input2[15] => input2[15].IN1
input2[16] => input2[16].IN1
input2[17] => input2[17].IN1
input2[18] => input2[18].IN1
input2[19] => input2[19].IN1
input2[20] => input2[20].IN1
input2[21] => input2[21].IN1
input2[22] => input2[22].IN1
input2[23] => input2[23].IN1
input2[24] => input2[24].IN1
input2[25] => input2[25].IN1
input2[26] => input2[26].IN1
input2[27] => input2[27].IN1
input2[28] => input2[28].IN1
input2[29] => input2[29].IN1
input2[30] => input2[30].IN1
input2[31] => input2[31].IN1
shamt[0] => shamt[0].IN1
shamt[1] => shamt[1].IN1
shamt[2] => shamt[2].IN1
shamt[3] => shamt[3].IN1
shamt[4] => shamt[4].IN1
result[0] <= MainUla:mainUla.resultUla
result[1] <= MainUla:mainUla.resultUla
result[2] <= MainUla:mainUla.resultUla
result[3] <= MainUla:mainUla.resultUla
result[4] <= MainUla:mainUla.resultUla
result[5] <= MainUla:mainUla.resultUla
result[6] <= MainUla:mainUla.resultUla
result[7] <= MainUla:mainUla.resultUla
result[8] <= MainUla:mainUla.resultUla
result[9] <= MainUla:mainUla.resultUla
result[10] <= MainUla:mainUla.resultUla
result[11] <= MainUla:mainUla.resultUla
result[12] <= MainUla:mainUla.resultUla
result[13] <= MainUla:mainUla.resultUla
result[14] <= MainUla:mainUla.resultUla
result[15] <= MainUla:mainUla.resultUla
result[16] <= MainUla:mainUla.resultUla
result[17] <= MainUla:mainUla.resultUla
result[18] <= MainUla:mainUla.resultUla
result[19] <= MainUla:mainUla.resultUla
result[20] <= MainUla:mainUla.resultUla
result[21] <= MainUla:mainUla.resultUla
result[22] <= MainUla:mainUla.resultUla
result[23] <= MainUla:mainUla.resultUla
result[24] <= MainUla:mainUla.resultUla
result[25] <= MainUla:mainUla.resultUla
result[26] <= MainUla:mainUla.resultUla
result[27] <= MainUla:mainUla.resultUla
result[28] <= MainUla:mainUla.resultUla
result[29] <= MainUla:mainUla.resultUla
result[30] <= MainUla:mainUla.resultUla
result[31] <= MainUla:mainUla.resultUla
aluOp[0] => aluOp[0].IN1
aluOp[1] => aluOp[1].IN1
funct[0] => ~NO_FANOUT~
funct[1] => ~NO_FANOUT~
funct[2] => ~NO_FANOUT~
funct[3] => ~NO_FANOUT~
funct[4] => ~NO_FANOUT~
funct[5] => ~NO_FANOUT~
opCode[0] => opCode[0].IN2
opCode[1] => opCode[1].IN2
opCode[2] => opCode[2].IN2
opCode[3] => opCode[3].IN2
opCode[4] => opCode[4].IN2
opCode[5] => opCode[5].IN2


|Ula|AluControl:aluControl
aluOpControl[0] => Equal0.IN31
aluOpControl[0] => Equal1.IN0
aluOpControl[0] => Equal2.IN31
aluOpControl[1] => Equal0.IN30
aluOpControl[1] => Equal1.IN31
aluOpControl[1] => Equal2.IN0
functControl[0] => Equal3.IN31
functControl[0] => Equal4.IN31
functControl[0] => Equal5.IN1
functControl[0] => Equal6.IN31
functControl[0] => Equal7.IN31
functControl[0] => Equal8.IN31
functControl[0] => Equal9.IN2
functControl[0] => Equal10.IN31
functControl[1] => Equal3.IN30
functControl[1] => Equal4.IN0
functControl[1] => Equal5.IN0
functControl[1] => Equal6.IN30
functControl[1] => Equal7.IN1
functControl[1] => Equal8.IN30
functControl[1] => Equal9.IN31
functControl[1] => Equal10.IN2
functControl[2] => Equal3.IN29
functControl[2] => Equal4.IN30
functControl[2] => Equal5.IN31
functControl[2] => Equal6.IN29
functControl[2] => Equal7.IN30
functControl[2] => Equal8.IN1
functControl[2] => Equal9.IN1
functControl[2] => Equal10.IN30
functControl[3] => Equal3.IN28
functControl[3] => Equal4.IN29
functControl[3] => Equal5.IN30
functControl[3] => Equal6.IN28
functControl[3] => Equal7.IN29
functControl[3] => Equal8.IN29
functControl[3] => Equal9.IN30
functControl[3] => Equal10.IN1
functControl[4] => Equal3.IN27
functControl[4] => Equal4.IN28
functControl[4] => Equal5.IN29
functControl[4] => Equal6.IN27
functControl[4] => Equal7.IN28
functControl[4] => Equal8.IN28
functControl[4] => Equal9.IN29
functControl[4] => Equal10.IN29
functControl[5] => Equal3.IN26
functControl[5] => Equal4.IN27
functControl[5] => Equal5.IN28
functControl[5] => Equal6.IN0
functControl[5] => Equal7.IN0
functControl[5] => Equal8.IN0
functControl[5] => Equal9.IN0
functControl[5] => Equal10.IN0
opCodeControl[0] => ~NO_FANOUT~
opCodeControl[1] => ~NO_FANOUT~
opCodeControl[2] => ~NO_FANOUT~
opCodeControl[3] => ~NO_FANOUT~
opCodeControl[4] => ~NO_FANOUT~
opCodeControl[5] => ~NO_FANOUT~
aluControlOutContrlol[0] <= aluControlOutContrlol[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
aluControlOutContrlol[1] <= aluControlOutContrlol[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
aluControlOutContrlol[2] <= aluControlOutContrlol[2]$latch.DB_MAX_OUTPUT_PORT_TYPE


|Ula|MainUla:mainUla
inputUla1[0] => Add0.IN33
inputUla1[0] => Add1.IN32
inputUla1[0] => Add2.IN64
inputUla1[0] => resultUla.IN0
inputUla1[0] => resultUla.IN0
inputUla1[0] => ShiftLeft0.IN32
inputUla1[0] => ShiftRight0.IN32
inputUla1[0] => ShiftRight1.IN32
inputUla1[0] => LessThan0.IN32
inputUla1[1] => Add0.IN32
inputUla1[1] => Add1.IN31
inputUla1[1] => Add2.IN63
inputUla1[1] => resultUla.IN0
inputUla1[1] => resultUla.IN0
inputUla1[1] => ShiftLeft0.IN31
inputUla1[1] => ShiftRight0.IN31
inputUla1[1] => ShiftRight1.IN31
inputUla1[1] => LessThan0.IN31
inputUla1[2] => Add0.IN31
inputUla1[2] => Add1.IN30
inputUla1[2] => Add2.IN62
inputUla1[2] => resultUla.IN0
inputUla1[2] => resultUla.IN0
inputUla1[2] => ShiftLeft0.IN30
inputUla1[2] => ShiftRight0.IN30
inputUla1[2] => ShiftRight1.IN30
inputUla1[2] => LessThan0.IN30
inputUla1[3] => Add0.IN30
inputUla1[3] => Add1.IN29
inputUla1[3] => Add2.IN61
inputUla1[3] => resultUla.IN0
inputUla1[3] => resultUla.IN0
inputUla1[3] => ShiftLeft0.IN29
inputUla1[3] => ShiftRight0.IN29
inputUla1[3] => ShiftRight1.IN29
inputUla1[3] => LessThan0.IN29
inputUla1[4] => Add0.IN29
inputUla1[4] => Add1.IN28
inputUla1[4] => Add2.IN60
inputUla1[4] => resultUla.IN0
inputUla1[4] => resultUla.IN0
inputUla1[4] => ShiftLeft0.IN28
inputUla1[4] => ShiftRight0.IN28
inputUla1[4] => ShiftRight1.IN28
inputUla1[4] => LessThan0.IN28
inputUla1[5] => Add0.IN28
inputUla1[5] => Add1.IN27
inputUla1[5] => Add2.IN59
inputUla1[5] => resultUla.IN0
inputUla1[5] => resultUla.IN0
inputUla1[5] => ShiftLeft0.IN27
inputUla1[5] => ShiftRight0.IN27
inputUla1[5] => ShiftRight1.IN27
inputUla1[5] => LessThan0.IN27
inputUla1[6] => Add0.IN27
inputUla1[6] => Add1.IN26
inputUla1[6] => Add2.IN58
inputUla1[6] => resultUla.IN0
inputUla1[6] => resultUla.IN0
inputUla1[6] => ShiftLeft0.IN26
inputUla1[6] => ShiftRight0.IN26
inputUla1[6] => ShiftRight1.IN26
inputUla1[6] => LessThan0.IN26
inputUla1[7] => Add0.IN26
inputUla1[7] => Add1.IN25
inputUla1[7] => Add2.IN57
inputUla1[7] => resultUla.IN0
inputUla1[7] => resultUla.IN0
inputUla1[7] => ShiftLeft0.IN25
inputUla1[7] => ShiftRight0.IN25
inputUla1[7] => ShiftRight1.IN25
inputUla1[7] => LessThan0.IN25
inputUla1[8] => Add0.IN25
inputUla1[8] => Add1.IN24
inputUla1[8] => Add2.IN56
inputUla1[8] => resultUla.IN0
inputUla1[8] => resultUla.IN0
inputUla1[8] => ShiftLeft0.IN24
inputUla1[8] => ShiftRight0.IN24
inputUla1[8] => ShiftRight1.IN24
inputUla1[8] => LessThan0.IN24
inputUla1[9] => Add0.IN24
inputUla1[9] => Add1.IN23
inputUla1[9] => Add2.IN55
inputUla1[9] => resultUla.IN0
inputUla1[9] => resultUla.IN0
inputUla1[9] => ShiftLeft0.IN23
inputUla1[9] => ShiftRight0.IN23
inputUla1[9] => ShiftRight1.IN23
inputUla1[9] => LessThan0.IN23
inputUla1[10] => Add0.IN23
inputUla1[10] => Add1.IN22
inputUla1[10] => Add2.IN54
inputUla1[10] => resultUla.IN0
inputUla1[10] => resultUla.IN0
inputUla1[10] => ShiftLeft0.IN22
inputUla1[10] => ShiftRight0.IN22
inputUla1[10] => ShiftRight1.IN22
inputUla1[10] => LessThan0.IN22
inputUla1[11] => Add0.IN22
inputUla1[11] => Add1.IN21
inputUla1[11] => Add2.IN53
inputUla1[11] => resultUla.IN0
inputUla1[11] => resultUla.IN0
inputUla1[11] => ShiftLeft0.IN21
inputUla1[11] => ShiftRight0.IN21
inputUla1[11] => ShiftRight1.IN21
inputUla1[11] => LessThan0.IN21
inputUla1[12] => Add0.IN21
inputUla1[12] => Add1.IN20
inputUla1[12] => Add2.IN52
inputUla1[12] => resultUla.IN0
inputUla1[12] => resultUla.IN0
inputUla1[12] => ShiftLeft0.IN20
inputUla1[12] => ShiftRight0.IN20
inputUla1[12] => ShiftRight1.IN20
inputUla1[12] => LessThan0.IN20
inputUla1[13] => Add0.IN20
inputUla1[13] => Add1.IN19
inputUla1[13] => Add2.IN51
inputUla1[13] => resultUla.IN0
inputUla1[13] => resultUla.IN0
inputUla1[13] => ShiftLeft0.IN19
inputUla1[13] => ShiftRight0.IN19
inputUla1[13] => ShiftRight1.IN19
inputUla1[13] => LessThan0.IN19
inputUla1[14] => Add0.IN19
inputUla1[14] => Add1.IN18
inputUla1[14] => Add2.IN50
inputUla1[14] => resultUla.IN0
inputUla1[14] => resultUla.IN0
inputUla1[14] => ShiftLeft0.IN18
inputUla1[14] => ShiftRight0.IN18
inputUla1[14] => ShiftRight1.IN18
inputUla1[14] => LessThan0.IN18
inputUla1[15] => Add0.IN18
inputUla1[15] => Add1.IN17
inputUla1[15] => Add2.IN49
inputUla1[15] => resultUla.IN0
inputUla1[15] => resultUla.IN0
inputUla1[15] => ShiftLeft0.IN17
inputUla1[15] => ShiftRight0.IN17
inputUla1[15] => ShiftRight1.IN17
inputUla1[15] => LessThan0.IN17
inputUla1[16] => Add0.IN17
inputUla1[16] => Add1.IN16
inputUla1[16] => Add2.IN48
inputUla1[16] => resultUla.IN0
inputUla1[16] => resultUla.IN0
inputUla1[16] => ShiftLeft0.IN16
inputUla1[16] => ShiftRight0.IN16
inputUla1[16] => ShiftRight1.IN16
inputUla1[16] => LessThan0.IN16
inputUla1[17] => Add0.IN16
inputUla1[17] => Add1.IN15
inputUla1[17] => Add2.IN47
inputUla1[17] => resultUla.IN0
inputUla1[17] => resultUla.IN0
inputUla1[17] => ShiftLeft0.IN15
inputUla1[17] => ShiftRight0.IN15
inputUla1[17] => ShiftRight1.IN15
inputUla1[17] => LessThan0.IN15
inputUla1[18] => Add0.IN15
inputUla1[18] => Add1.IN14
inputUla1[18] => Add2.IN46
inputUla1[18] => resultUla.IN0
inputUla1[18] => resultUla.IN0
inputUla1[18] => ShiftLeft0.IN14
inputUla1[18] => ShiftRight0.IN14
inputUla1[18] => ShiftRight1.IN14
inputUla1[18] => LessThan0.IN14
inputUla1[19] => Add0.IN14
inputUla1[19] => Add1.IN13
inputUla1[19] => Add2.IN45
inputUla1[19] => resultUla.IN0
inputUla1[19] => resultUla.IN0
inputUla1[19] => ShiftLeft0.IN13
inputUla1[19] => ShiftRight0.IN13
inputUla1[19] => ShiftRight1.IN13
inputUla1[19] => LessThan0.IN13
inputUla1[20] => Add0.IN13
inputUla1[20] => Add1.IN12
inputUla1[20] => Add2.IN44
inputUla1[20] => resultUla.IN0
inputUla1[20] => resultUla.IN0
inputUla1[20] => ShiftLeft0.IN12
inputUla1[20] => ShiftRight0.IN12
inputUla1[20] => ShiftRight1.IN12
inputUla1[20] => LessThan0.IN12
inputUla1[21] => Add0.IN12
inputUla1[21] => Add1.IN11
inputUla1[21] => Add2.IN43
inputUla1[21] => resultUla.IN0
inputUla1[21] => resultUla.IN0
inputUla1[21] => ShiftLeft0.IN11
inputUla1[21] => ShiftRight0.IN11
inputUla1[21] => ShiftRight1.IN11
inputUla1[21] => LessThan0.IN11
inputUla1[22] => Add0.IN11
inputUla1[22] => Add1.IN10
inputUla1[22] => Add2.IN42
inputUla1[22] => resultUla.IN0
inputUla1[22] => resultUla.IN0
inputUla1[22] => ShiftLeft0.IN10
inputUla1[22] => ShiftRight0.IN10
inputUla1[22] => ShiftRight1.IN10
inputUla1[22] => LessThan0.IN10
inputUla1[23] => Add0.IN10
inputUla1[23] => Add1.IN9
inputUla1[23] => Add2.IN41
inputUla1[23] => resultUla.IN0
inputUla1[23] => resultUla.IN0
inputUla1[23] => ShiftLeft0.IN9
inputUla1[23] => ShiftRight0.IN9
inputUla1[23] => ShiftRight1.IN9
inputUla1[23] => LessThan0.IN9
inputUla1[24] => Add0.IN9
inputUla1[24] => Add1.IN8
inputUla1[24] => Add2.IN40
inputUla1[24] => resultUla.IN0
inputUla1[24] => resultUla.IN0
inputUla1[24] => ShiftLeft0.IN8
inputUla1[24] => ShiftRight0.IN8
inputUla1[24] => ShiftRight1.IN8
inputUla1[24] => LessThan0.IN8
inputUla1[25] => Add0.IN8
inputUla1[25] => Add1.IN7
inputUla1[25] => Add2.IN39
inputUla1[25] => resultUla.IN0
inputUla1[25] => resultUla.IN0
inputUla1[25] => ShiftLeft0.IN7
inputUla1[25] => ShiftRight0.IN7
inputUla1[25] => ShiftRight1.IN7
inputUla1[25] => LessThan0.IN7
inputUla1[26] => Add0.IN7
inputUla1[26] => Add1.IN6
inputUla1[26] => Add2.IN38
inputUla1[26] => resultUla.IN0
inputUla1[26] => resultUla.IN0
inputUla1[26] => ShiftLeft0.IN6
inputUla1[26] => ShiftRight0.IN6
inputUla1[26] => ShiftRight1.IN6
inputUla1[26] => LessThan0.IN6
inputUla1[27] => Add0.IN6
inputUla1[27] => Add1.IN5
inputUla1[27] => Add2.IN37
inputUla1[27] => resultUla.IN0
inputUla1[27] => resultUla.IN0
inputUla1[27] => ShiftLeft0.IN5
inputUla1[27] => ShiftRight0.IN5
inputUla1[27] => ShiftRight1.IN5
inputUla1[27] => LessThan0.IN5
inputUla1[28] => Add0.IN5
inputUla1[28] => Add1.IN4
inputUla1[28] => Add2.IN36
inputUla1[28] => resultUla.IN0
inputUla1[28] => resultUla.IN0
inputUla1[28] => ShiftLeft0.IN4
inputUla1[28] => ShiftRight0.IN4
inputUla1[28] => ShiftRight1.IN4
inputUla1[28] => LessThan0.IN4
inputUla1[29] => Add0.IN4
inputUla1[29] => Add1.IN3
inputUla1[29] => Add2.IN35
inputUla1[29] => resultUla.IN0
inputUla1[29] => resultUla.IN0
inputUla1[29] => ShiftLeft0.IN3
inputUla1[29] => ShiftRight0.IN3
inputUla1[29] => ShiftRight1.IN3
inputUla1[29] => LessThan0.IN3
inputUla1[30] => Add0.IN3
inputUla1[30] => Add1.IN2
inputUla1[30] => Add2.IN34
inputUla1[30] => resultUla.IN0
inputUla1[30] => resultUla.IN0
inputUla1[30] => ShiftLeft0.IN2
inputUla1[30] => ShiftRight0.IN2
inputUla1[30] => ShiftRight1.IN2
inputUla1[30] => LessThan0.IN2
inputUla1[31] => Add0.IN1
inputUla1[31] => Add0.IN2
inputUla1[31] => Add1.IN1
inputUla1[31] => Add2.IN33
inputUla1[31] => resultUla.IN0
inputUla1[31] => resultUla.IN0
inputUla1[31] => ShiftLeft0.IN1
inputUla1[31] => ShiftRight0.IN1
inputUla1[31] => ShiftRight1.IN0
inputUla1[31] => ShiftRight1.IN1
inputUla1[31] => LessThan0.IN1
inputUla2[0] => Add0.IN66
inputUla2[0] => Add1.IN64
inputUla2[0] => resultUla.IN1
inputUla2[0] => resultUla.IN1
inputUla2[0] => LessThan0.IN64
inputUla2[0] => Add2.IN32
inputUla2[1] => Add0.IN65
inputUla2[1] => Add1.IN63
inputUla2[1] => resultUla.IN1
inputUla2[1] => resultUla.IN1
inputUla2[1] => LessThan0.IN63
inputUla2[1] => Add2.IN31
inputUla2[2] => Add0.IN64
inputUla2[2] => Add1.IN62
inputUla2[2] => resultUla.IN1
inputUla2[2] => resultUla.IN1
inputUla2[2] => LessThan0.IN62
inputUla2[2] => Add2.IN30
inputUla2[3] => Add0.IN63
inputUla2[3] => Add1.IN61
inputUla2[3] => resultUla.IN1
inputUla2[3] => resultUla.IN1
inputUla2[3] => LessThan0.IN61
inputUla2[3] => Add2.IN29
inputUla2[4] => Add0.IN62
inputUla2[4] => Add1.IN60
inputUla2[4] => resultUla.IN1
inputUla2[4] => resultUla.IN1
inputUla2[4] => LessThan0.IN60
inputUla2[4] => Add2.IN28
inputUla2[5] => Add0.IN61
inputUla2[5] => Add1.IN59
inputUla2[5] => resultUla.IN1
inputUla2[5] => resultUla.IN1
inputUla2[5] => LessThan0.IN59
inputUla2[5] => Add2.IN27
inputUla2[6] => Add0.IN60
inputUla2[6] => Add1.IN58
inputUla2[6] => resultUla.IN1
inputUla2[6] => resultUla.IN1
inputUla2[6] => LessThan0.IN58
inputUla2[6] => Add2.IN26
inputUla2[7] => Add0.IN59
inputUla2[7] => Add1.IN57
inputUla2[7] => resultUla.IN1
inputUla2[7] => resultUla.IN1
inputUla2[7] => LessThan0.IN57
inputUla2[7] => Add2.IN25
inputUla2[8] => Add0.IN58
inputUla2[8] => Add1.IN56
inputUla2[8] => resultUla.IN1
inputUla2[8] => resultUla.IN1
inputUla2[8] => LessThan0.IN56
inputUla2[8] => Add2.IN24
inputUla2[9] => Add0.IN57
inputUla2[9] => Add1.IN55
inputUla2[9] => resultUla.IN1
inputUla2[9] => resultUla.IN1
inputUla2[9] => LessThan0.IN55
inputUla2[9] => Add2.IN23
inputUla2[10] => Add0.IN56
inputUla2[10] => Add1.IN54
inputUla2[10] => resultUla.IN1
inputUla2[10] => resultUla.IN1
inputUla2[10] => LessThan0.IN54
inputUla2[10] => Add2.IN22
inputUla2[11] => Add0.IN55
inputUla2[11] => Add1.IN53
inputUla2[11] => resultUla.IN1
inputUla2[11] => resultUla.IN1
inputUla2[11] => LessThan0.IN53
inputUla2[11] => Add2.IN21
inputUla2[12] => Add0.IN54
inputUla2[12] => Add1.IN52
inputUla2[12] => resultUla.IN1
inputUla2[12] => resultUla.IN1
inputUla2[12] => LessThan0.IN52
inputUla2[12] => Add2.IN20
inputUla2[13] => Add0.IN53
inputUla2[13] => Add1.IN51
inputUla2[13] => resultUla.IN1
inputUla2[13] => resultUla.IN1
inputUla2[13] => LessThan0.IN51
inputUla2[13] => Add2.IN19
inputUla2[14] => Add0.IN52
inputUla2[14] => Add1.IN50
inputUla2[14] => resultUla.IN1
inputUla2[14] => resultUla.IN1
inputUla2[14] => LessThan0.IN50
inputUla2[14] => Add2.IN18
inputUla2[15] => Add0.IN51
inputUla2[15] => Add1.IN49
inputUla2[15] => resultUla.IN1
inputUla2[15] => resultUla.IN1
inputUla2[15] => LessThan0.IN49
inputUla2[15] => Add2.IN17
inputUla2[16] => Add0.IN50
inputUla2[16] => Add1.IN48
inputUla2[16] => resultUla.IN1
inputUla2[16] => resultUla.IN1
inputUla2[16] => LessThan0.IN48
inputUla2[16] => Add2.IN16
inputUla2[17] => Add0.IN49
inputUla2[17] => Add1.IN47
inputUla2[17] => resultUla.IN1
inputUla2[17] => resultUla.IN1
inputUla2[17] => LessThan0.IN47
inputUla2[17] => Add2.IN15
inputUla2[18] => Add0.IN48
inputUla2[18] => Add1.IN46
inputUla2[18] => resultUla.IN1
inputUla2[18] => resultUla.IN1
inputUla2[18] => LessThan0.IN46
inputUla2[18] => Add2.IN14
inputUla2[19] => Add0.IN47
inputUla2[19] => Add1.IN45
inputUla2[19] => resultUla.IN1
inputUla2[19] => resultUla.IN1
inputUla2[19] => LessThan0.IN45
inputUla2[19] => Add2.IN13
inputUla2[20] => Add0.IN46
inputUla2[20] => Add1.IN44
inputUla2[20] => resultUla.IN1
inputUla2[20] => resultUla.IN1
inputUla2[20] => LessThan0.IN44
inputUla2[20] => Add2.IN12
inputUla2[21] => Add0.IN45
inputUla2[21] => Add1.IN43
inputUla2[21] => resultUla.IN1
inputUla2[21] => resultUla.IN1
inputUla2[21] => LessThan0.IN43
inputUla2[21] => Add2.IN11
inputUla2[22] => Add0.IN44
inputUla2[22] => Add1.IN42
inputUla2[22] => resultUla.IN1
inputUla2[22] => resultUla.IN1
inputUla2[22] => LessThan0.IN42
inputUla2[22] => Add2.IN10
inputUla2[23] => Add0.IN43
inputUla2[23] => Add1.IN41
inputUla2[23] => resultUla.IN1
inputUla2[23] => resultUla.IN1
inputUla2[23] => LessThan0.IN41
inputUla2[23] => Add2.IN9
inputUla2[24] => Add0.IN42
inputUla2[24] => Add1.IN40
inputUla2[24] => resultUla.IN1
inputUla2[24] => resultUla.IN1
inputUla2[24] => LessThan0.IN40
inputUla2[24] => Add2.IN8
inputUla2[25] => Add0.IN41
inputUla2[25] => Add1.IN39
inputUla2[25] => resultUla.IN1
inputUla2[25] => resultUla.IN1
inputUla2[25] => LessThan0.IN39
inputUla2[25] => Add2.IN7
inputUla2[26] => Add0.IN40
inputUla2[26] => Add1.IN38
inputUla2[26] => resultUla.IN1
inputUla2[26] => resultUla.IN1
inputUla2[26] => LessThan0.IN38
inputUla2[26] => Add2.IN6
inputUla2[27] => Add0.IN39
inputUla2[27] => Add1.IN37
inputUla2[27] => resultUla.IN1
inputUla2[27] => resultUla.IN1
inputUla2[27] => LessThan0.IN37
inputUla2[27] => Add2.IN5
inputUla2[28] => Add0.IN38
inputUla2[28] => Add1.IN36
inputUla2[28] => resultUla.IN1
inputUla2[28] => resultUla.IN1
inputUla2[28] => LessThan0.IN36
inputUla2[28] => Add2.IN4
inputUla2[29] => Add0.IN37
inputUla2[29] => Add1.IN35
inputUla2[29] => resultUla.IN1
inputUla2[29] => resultUla.IN1
inputUla2[29] => LessThan0.IN35
inputUla2[29] => Add2.IN3
inputUla2[30] => Add0.IN36
inputUla2[30] => Add1.IN34
inputUla2[30] => resultUla.IN1
inputUla2[30] => resultUla.IN1
inputUla2[30] => LessThan0.IN34
inputUla2[30] => Add2.IN2
inputUla2[31] => Add0.IN34
inputUla2[31] => Add0.IN35
inputUla2[31] => Add1.IN33
inputUla2[31] => resultUla.IN1
inputUla2[31] => resultUla.IN1
inputUla2[31] => LessThan0.IN33
inputUla2[31] => Add2.IN1
aluControlOutUla[0] => Equal0.IN3
aluControlOutUla[0] => Equal1.IN0
aluControlOutUla[0] => Equal2.IN3
aluControlOutUla[0] => Equal3.IN1
aluControlOutUla[0] => Equal4.IN3
aluControlOutUla[0] => Equal5.IN1
aluControlOutUla[0] => Equal6.IN3
aluControlOutUla[0] => Equal7.IN2
aluControlOutUla[1] => Equal0.IN2
aluControlOutUla[1] => Equal1.IN3
aluControlOutUla[1] => Equal2.IN0
aluControlOutUla[1] => Equal3.IN0
aluControlOutUla[1] => Equal4.IN2
aluControlOutUla[1] => Equal5.IN3
aluControlOutUla[1] => Equal6.IN1
aluControlOutUla[1] => Equal7.IN1
aluControlOutUla[2] => Equal0.IN1
aluControlOutUla[2] => Equal1.IN2
aluControlOutUla[2] => Equal2.IN2
aluControlOutUla[2] => Equal3.IN3
aluControlOutUla[2] => Equal4.IN0
aluControlOutUla[2] => Equal5.IN0
aluControlOutUla[2] => Equal6.IN0
aluControlOutUla[2] => Equal7.IN0
aluControlOutUla[3] => Equal0.IN0
aluControlOutUla[3] => Equal1.IN1
aluControlOutUla[3] => Equal2.IN1
aluControlOutUla[3] => Equal3.IN2
aluControlOutUla[3] => Equal4.IN1
aluControlOutUla[3] => Equal5.IN2
aluControlOutUla[3] => Equal6.IN2
aluControlOutUla[3] => Equal7.IN3
shamtUla[0] => ShiftLeft0.IN37
shamtUla[0] => ShiftRight0.IN37
shamtUla[0] => ShiftRight1.IN37
shamtUla[1] => ShiftLeft0.IN36
shamtUla[1] => ShiftRight0.IN36
shamtUla[1] => ShiftRight1.IN36
shamtUla[2] => ShiftLeft0.IN35
shamtUla[2] => ShiftRight0.IN35
shamtUla[2] => ShiftRight1.IN35
shamtUla[3] => ShiftLeft0.IN34
shamtUla[3] => ShiftRight0.IN34
shamtUla[3] => ShiftRight1.IN34
shamtUla[4] => ShiftLeft0.IN33
shamtUla[4] => ShiftRight0.IN33
shamtUla[4] => ShiftRight1.IN33
resultUla[0] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[1] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[2] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[3] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[4] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[5] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[6] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[7] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[8] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[9] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[10] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[11] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[12] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[13] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[14] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[15] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[16] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[17] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[18] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[19] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[20] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[21] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[22] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[23] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[24] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[25] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[26] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[27] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[28] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[29] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[30] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
resultUla[31] <= resultUla.DB_MAX_OUTPUT_PORT_TYPE
opCodeUla[0] => ~NO_FANOUT~
opCodeUla[1] => ~NO_FANOUT~
opCodeUla[2] => ~NO_FANOUT~
opCodeUla[3] => ~NO_FANOUT~
opCodeUla[4] => ~NO_FANOUT~
opCodeUla[5] => ~NO_FANOUT~
isOverflowedUla[0] <= isOverflowedUla.DB_MAX_OUTPUT_PORT_TYPE
isOverflowedUla[1] <= <GND>


